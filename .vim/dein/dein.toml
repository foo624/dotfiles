# vim:set et ts=2 sts=2 sw=2 tw=0 fdm=marker:

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/ddc.vim'
hook_add = 'source ~/.vim/config/plugins/plugins-ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-cmdline'

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = 'source ~/.vim/config/plugins/plugins-denite.vim'

[[plugins]]
repo = 'Shougo/neco-vim'

[[plugins]]
repo = 'Shougo/deol.nvim'
if   = '''has('unix')'''

[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'roxma/nvim-yarp'
if   = '''!has('nvim') && 800 <= v:version'''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if   = '''!has('nvim') && 800 <= v:version'''

[[plugins]]
repo = 'Shougo/echodoc.vim'
hook_add = '''
  let g:echodoc_enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = 'source ~/.vim/config/plugins/plugins-neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'Shougo/vinarise'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0 "Disable default mappings
  nmap s <Plug>(easymotion-s2)
  xmap s <Plug>(easymotion-s2)
  omap z <Plug>(easymotion-s2)

  " `JK` Motions: Extend line motions
  map <C-j> <Plug>(easymotion-j)
  map <C-k> <Plug>(easymotion-k)
  " keep cursor column with `JK` motions
  let g:EasyMotion_startofline = 0
'''

[[plugins]]
repo = 'gregsexton/gitv'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = 'source ~/.vim/config/plugins/plugins-lightline.vim'

[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = 'let g:loaded_matchparen = 1'

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = 'source ~/.vim/config/plugins/plugins-fzf.vim'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  " Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
  xmap <Enter> <Plug>(EasyAlign)
  " Start interactive EasyAlign for a motion/text object (e.g. gaip)
  nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'justinhoward/fzf-neoyank'

[[plugins]]
repo = 'maximbaz/lightline-ale'

[[plugins]]
repo = 'mbbill/undotree'

[[plugins]]
repo = 'mrtazz/DoxygenToolkit.vim'
hook_add = '''
  let g:DoxygenToolkit_paramTag_pre = "@param [in]	"
  let g:DoxygenToolkit_startCommentTag = "/**"
  let g:DoxygenToolkit_startCommentBlock = "/*"
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
hook_add = 'source ~/.vim/config/plugins/plugins-lspconfig.vim'

[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_add = '''
  let g:cheatsheet#cheat_file = '~/.local/state/nvim/cheatsheet.md'
  nnoremap <silent> <Leader>md :<C-u>Cheat<CR>
'''

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap <silent> <Leader>gs :<C-u>Git<CR>
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

# vim-scripts
[[plugins]]
repo = 'vim-scripts/genutils'

[[plugins]]
repo = 'vim-scripts/matchit.zip'

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = 'source ~/.vim/config/plugins/plugins-ale.vim'

[[plugins]] # fish syntax
repo = 'khaveesh/vim-fish-syntax'
on_ft = ['fish']
